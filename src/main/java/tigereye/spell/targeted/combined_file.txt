package tigereye.spell.targeted;

public interface ISpellTargeted
{
}
package tigereye.spell.targeted;

import tigereye.spell.*;
import net.minecraft.world.*;
import net.minecraft.entity.player.*;
import net.minecraft.entity.projectile.*;
import net.minecraft.util.*;
import net.minecraft.entity.*;

public class SpellBlazeFire extends Spell implements ISpellTargeted
{
    public SpellBlazeFire(final int par1) {
        super(par1);
        this.setName("blazefire");
    }
    
    @Override
    public short getMaxLevel() {
        return 5;
    }
    
    @Override
    public int getManaCost() {
        return 3;
    }
    
    @Override
    public short getCooldown() {
        return 40;
    }
    
    @Override
    public String getParticleName() {
        return "flame";
    }
    
    @Override
    public double getParticleAmount() {
        return 0.3;
    }
    
    @Override
    public void castSpell(final short par1Level, final World par2World, final EntityPlayer par3EntityPlayer) {
        par2World.playSoundAtEntity((Entity)par3EntityPlayer, this.getSoundName(), 1.0f, 1.0f);
        final Vec3 v3 = par3EntityPlayer.getLook(1.0f);
        final int[] accuracies = { 10, 9, 8, 9, 10 };
        for (int i = 0; i < this.getNormalizedLevel(par1Level); ++i) {
            final EntitySmallFireball smallfireball = new EntitySmallFireball(par2World, par3EntityPlayer.posX, par3EntityPlayer.posY + par3EntityPlayer.eyeHeight, par3EntityPlayer.posZ, v3.xCoord + SpellBlazeFire.random.nextGaussian() / accuracies[par1Level - 1], v3.yCoord, v3.zCoord + SpellBlazeFire.random.nextGaussian() / accuracies[par1Level - 1]);
            smallfireball.shootingEntity = (EntityLivingBase)par3EntityPlayer;
            par2World.spawnEntityInWorld((Entity)smallfireball);
        }
    }
}
package tigereye.spell.targeted;

import tigereye.spell.*;
import net.minecraft.world.*;
import net.minecraft.entity.player.*;
import net.minecraft.entity.projectile.*;
import net.minecraft.util.*;
import net.minecraft.entity.*;

public class SpellGhastFire extends Spell implements ISpellTargeted
{
    public SpellGhastFire(final int par1) {
        super(par1);
        this.setName("ghastfire");
    }
    
    @Override
    public int getManaCost() {
        return 3;
    }
    
    @Override
    public short getMaxLevel() {
        return 3;
    }
    
    @Override
    public short getCooldown() {
        return 40;
    }
    
    @Override
    public String getParticleName() {
        return "flame";
    }
    
    @Override
    public double getParticleAmount() {
        return 0.3;
    }
    
    @Override
    public void castSpell(final short par1Level, final World par2World, final EntityPlayer par3EntityPlayer) {
        par2World.playSoundAtEntity((Entity)par3EntityPlayer, this.getSoundName(), 1.0f, 1.0f);
        final Vec3 v3 = par3EntityPlayer.getLook(1.0f);
        final int[] accuracies = { 9, 8, 9 };
        for (int i = 0; i < this.getNormalizedLevel(par1Level); ++i) {
            final EntitySmallFireball smallfireball = new EntitySmallFireball(par2World, par3EntityPlayer.posX, par3EntityPlayer.posY + par3EntityPlayer.eyeHeight, par3EntityPlayer.posZ, v3.xCoord + SpellBlazeFire.random.nextGaussian() / accuracies[par1Level - 1], v3.yCoord, v3.zCoord + SpellBlazeFire.random.nextGaussian() / accuracies[par1Level - 1]);
            smallfireball.shootingEntity = (EntityLivingBase)par3EntityPlayer;
            par2World.spawnEntityInWorld((Entity)smallfireball);
        }
    }
}
package tigereye.spell.targeted;

import tigereye.spell.Spell;
import net.minecraft.world.World;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.Vec3;

public class SpellTelekinesis extends Spell {

    public SpellTelekinesis(final int par1) {
        super(par1);
        this.setName("telekinesis");
    }

    @Override
    public short getMaxLevel() {
        return 3; // Максимальный уровень заклинания
    }

    @Override
    public int getManaCost() {
        return 6; // Стоимость маны
    }

    @Override
    public short getCooldown() {
        return 150; // Время перезарядки
    }

    @Override
    public String getParticleName() {
        return "enchantmenttable"; // Частицы зачарования
    }

    @Override
    public double getParticleAmount() {
        return 0.5; // Количество частиц
    }

    @Override
    public String getSoundName() {
        return "random.pop"; // Звук поднятия
    }

    @Override
    public void castSpell(final short par1Level, final World par2World, final EntityPlayer par3EntityPlayer) {
        // Воспроизводим звук
        par2World.playSoundAtEntity(par3EntityPlayer, this.getSoundName(), 1.0f, 1.0f);

        // Получаем направление взгляда игрока
        Vec3 lookVec = par3EntityPlayer.getLookVec();

        // Поднимаем и бросаем цель
        Entity target = par3EntityPlayer.rayTrace(10.0, 1.0f).entityHit;
        if (target instanceof EntityLivingBase) {
            target.motionX = lookVec.xCoord * 2.0;
            target.motionY = lookVec.yCoord * 2.0;
            target.motionZ = lookVec.zCoord * 2.0;
        }

        // Создаем частицы
        for (int i = 0; i < 15; i++) {
            par2World.spawnParticle(this.getParticleName(),
                    target.posX + (Spell.random.nextDouble() - 0.5),
                    target.posY + Spell.random.nextDouble() * 2,
                    target.posZ + (Spell.random.nextDouble() - 0.5),
                    0.0, 0.0, 0.0);
        }
    }
}package tigereye.spell.targeted;

import tigereye.spell.*;
import net.minecraft.world.*;
import net.minecraft.entity.player.*;
import net.minecraft.client.*;
import net.minecraft.entity.*;

public class SpellTeleport extends Spell implements ISpellTargeted
{
    private final int[] distances;
    
    public SpellTeleport(final int par1) {
        super(par1);
        this.distances = new int[] { 3, 5 };
        this.setName("teleport");
    }
    
    @Override
    public int getManaCost() {
        return 3;
    }
    
    @Override
    public short getCooldown() {
        return 200;
    }
    
    @Override
    public short getMaxLevel() {
        return (short)this.distances.length;
    }
    
    @Override
    public String getParticleName() {
        return "portal";
    }
    
    @Override
    public double getParticleAmount() {
        return 1.0;
    }
    
    @Override
    public void castSpell(final short par1Level, final World par2World, final EntityPlayer par3EntityPlayer) {
        final int distance = this.distances[this.getNormalizedLevel(par1Level) - 1];
        final Minecraft mc = Minecraft.getMinecraft();
        if (mc.renderViewEntity.rayTrace((double)distance, 1.5f) != null) {
            par2World.playSoundAtEntity((Entity)par3EntityPlayer, this.getSoundName(), 1.0f, 1.0f);
            final int blockHitX = mc.renderViewEntity.rayTrace((double)distance, 1.4f).blockX;
            final int blockHitY = mc.renderViewEntity.rayTrace((double)distance, 1.4f).blockY;
            final int blockHitZ = mc.renderViewEntity.rayTrace((double)distance, 1.4f).blockZ;
            par3EntityPlayer.setPositionAndUpdate(blockHitX - 0.9, (double)(blockHitY + 3), blockHitZ - 0.9);
            par2World.playSoundAtEntity((Entity)par3EntityPlayer, this.getSoundName(), 1.0f, 1.0f);
        }
    }
}
package tigereye.spell.targeted;

import tigereye.spell.*;
import net.minecraft.world.*;
import net.minecraft.entity.player.*;
import net.minecraft.entity.projectile.*;
import net.minecraft.util.*;
import net.minecraft.entity.*;

public class SpellWitherBlast extends Spell implements ISpellTargeted
{
    public SpellWitherBlast(final int par1) {
        super(par1);
        this.setName("witherblast");
    }
    
    @Override
    public short getMaxLevel() {
        return 7;
    }
    
    @Override
    public int getManaCost() {
        return 3;
    }
    
    @Override
    public short getCooldown() {
        return 40;
    }
    
    @Override
    public String getParticleName() {
        return "flame";
    }
    
    @Override
    public double getParticleAmount() {
        return 0.3;
    }
    
    @Override
    public void castSpell(final short par1Level, final World par2World, final EntityPlayer par3EntityPlayer) {
        par2World.playSoundAtEntity((Entity)par3EntityPlayer, this.getSoundName(), 1.0f, 1.0f);
        final Vec3 v3 = par3EntityPlayer.getLook(1.0f);
        final int[] accuracies = { 11, 10, 9, 8, 9, 10, 11 };
        for (int i = 0; i < this.getNormalizedLevel(par1Level); ++i) {
            final EntitySmallFireball smallfireball = new EntitySmallFireball(par2World, par3EntityPlayer.posX, par3EntityPlayer.posY + par3EntityPlayer.eyeHeight, par3EntityPlayer.posZ, v3.xCoord + SpellBlazeFire.random.nextGaussian() / accuracies[par1Level - 1], v3.yCoord, v3.zCoord + SpellBlazeFire.random.nextGaussian() / accuracies[par1Level - 1]);
            smallfireball.shootingEntity = (EntityLivingBase)par3EntityPlayer;
            par2World.spawnEntityInWorld((Entity)smallfireball);
        }
    }
}
